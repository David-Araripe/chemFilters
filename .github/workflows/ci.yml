name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit-tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          # - os: windows-latest
          #   path: ~\AppData\Local\pip\Cache

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ${{ matrix.include.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        pip install -e ".[dev]"
        
    - name: Display Environment Information
      run: |
        python -c "print('Python version: ' + '$(python --version)')"
        python -c "import platform; print('System info: ', platform.system(), platform.release())"
        python -c "import chemFilters; print('chem-filters version:', chemFilters.__version__)"
    
    - name: Run tests
      run: pytest -xv tests/ --junitxml="test_report.xml"

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: 'testing/test_pytest/test_report.xml'